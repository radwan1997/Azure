------------------------------------------------------------------------
One of choices to get template is Deploy template spec
Okay, let me show you how?
if you have Template and want to run it in your environment, one of choices is store ARM Template in Azure and use it anytime and share it with your team too using (RBAC) no need to SAS tokens beside users just need read access and use it with powershell or DevOps pipeline.

now let's begin:
Create a template spec by using:
az ts create \
  --name name_for_spec \
  --version "1.0a" \
  --resource-group RG_for_templeate \
  --location "RG_locat" \
  --template-file "template_file_in_local_path"

Just that you now have your store from templates

let's check it:
az ts list # it will list all your templates

Do you want to see specific  tempale details and with specific virsion:

az ts show \
    --name name_for_spec \
    --resource-group RG_for_templeate \
    --version "1.0a" # Specific version

now you do it, what about deploy it now?
Okay let me show you how.
This tempalte in Azure now is resource and in Azure evey resource have an resource ID.
we will use this resource id to get path for out template like URI

id = "your_template_json_file_ID"
az deployment group create \
  --resource-group RG_for_new_INFRA \
  --template-spec $id

for get ID (just in practice )

id = $(az ts show --name name_for_spec --resource-group RG_for_templeate --version "1.0a" --query "id")

----
What about pass parameters in your main file?
you have to choices:

(1) Pass parameter inline
az deployment group create \
  --resource-group RG_for_new_INFRA \
  --template-spec $id \ # Main template file
  --parameters storageAccountType='Standard_GRS' #for example change storage type in main template


(2) Create a local parameter file then pass it to main file
az deployment group create \
  --resource-group demoRG \
  --template-spec $id \ # Main template file
  --parameters "local_para_file"

------------------------------------------
Now let's make it some advanced.
i will show you how we can make it more advanced and complex.

if we need to make a template for every resource let me say one for database and another for webapp and last for network.

Is it will be good to make all this in one file!?

Yes, you are right. we will make template for evey one of them, but you will have to run evey one with seprate commands!!
Here you can use Linked Template.

Create the main template and the linked template.
In our main Folder for spec templates we will create main file named azuredeploy.json 
and folder named artifacts conatin our linked templates.
[1] first linked file >>artifacts/webapp.json
[2] second linked file >>artifacts/storage.json
[3] third linked file >>artifacts/network.json




to use link you can choose between two choices:
(1) RelativePath
(2) id
Both of them work well choose what yu want.

Okay my friend that's it for today, see you later.




Okay we have main_file.json file which will enclude path for every another template file


